# 组合相当于在新的类里边把别人的类给实例化
# 相当于纵向的用继承，横向的用组合
class Turtle():
    def __init__(self,x):
        self.num = x

class Fish():
    def __init__(self,x):
        self.num = x

class Pool():
    def __init__(self,x,y):
        self.turtle = Turtle(x)
        self.fish = Fish(y)

# 注意要有俩. 因为里边实例化了对象
poolA = Pool(10,5)
print(poolA.fish.num)
print(poolA.turtle.num)

# 还有MixIn

# 类定义，类对象，示例对象

# 当实例化一个类以后，对属性定义以后，那么那个属性才会被覆盖掉
# 如果没有定义属性，那么那个属性就没有被覆盖，换句话说，我之后再给类对象进行赋值的话，之前就实例化过的对象属性值还是会变
# 另外，如果属性的名字和方法相同的话，属性还会覆盖掉方法


# 绑定：python要求对象的方法需要有实例（自己，self）才可以被调用，总之就是每个方法里都需要有个self才可以的
# 现在的版本里没有self直接就不让编译了hhh

# 可以用.__dict看有什么属性，但是属性不会打印魔法方法
# 如果实例化的对象赋值以后的话，那么他们就有属性了，没有属性的时候会随着对类对象赋值的时候发生改变
# 默认参数不会给真正的赋值

# 可以理解为类实际上是一个模板，实例化以后的东西赋值属性以后才会有实际的值，并且是静态变量，如果此时删除类的话也不会影响到实例化的对象